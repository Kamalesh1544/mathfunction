name: Python CI with Pytest

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11"]
      fail-fast: false

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Pip Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        shell: bash

      - name: Build Project
        run: |
          mkdir -p build
          echo "Build completed on $(date) for ${{ matrix.os }} with Python ${{ matrix.python-version }}" > build/build-info.txt
        shell: bash

  test:
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11"]
      fail-fast: false

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Pip Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Test Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-html pytest-metadata pytest-html-merger
        shell: bash

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact-${{ matrix.os }}-${{ matrix.python-version }}
          path: build/

      - name: Run Pytest and Generate HTML Report
        run: |
          mkdir -p test-reports
          python -m pytest \
            --html=test-reports/report-${{ matrix.os }}-${{ matrix.python-version }}.html \
            --self-contained-html \
            --disable-warnings || true
        shell: bash

      - name: Upload Pytest HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report-${{ matrix.os }}-${{ matrix.python-version }}
          path: test-reports/

  merge-reports:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install pytest-html-merger
        run: |
          python -m pip install --upgrade pip
          pip install pytest-html-merger
        shell: bash

      # Download all uploaded report artifacts to all-reports/
      - name: Download All Pytest HTML Reports
        uses: actions/download-artifact@v4
        with:
          path: all-reports/

      - name: Merge All Pytest Reports
        run: |
          mkdir -p merged
          python -m pytest_html_merger -i all-reports/**/*.html -o merged/merged-report.html
        shell: bash

      - name: Upload Merged Pytest Report
        uses: actions/upload-artifact@v4
        with:
          name: merged-pytest-report
          path: merged/merged-report.html