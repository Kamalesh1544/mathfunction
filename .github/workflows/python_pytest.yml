name: Python CI with Pytest

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Build project
        run: |
          mkdir -p build
          echo "Build completed on $(date)" > build/build-info.txt

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.os }}-${{ matrix.python-version }}
          path: build/

  test:
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install pytest-html pytest-metadata

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-${{ matrix.os }}-${{ matrix.python-version }}
          path: build/

      - name: Run tests
        run: |
          python -m pytest \
            --html=report-${{ matrix.os }}-${{ matrix.python-version }}.html \
            --self-contained-html \
            --disable-warnings

      - name: Upload pytest report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report-${{ matrix.os }}-${{ matrix.python-version }}
          path: report-${{ matrix.os }}-${{ matrix.python-version }}.html

  merge-reports:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install merge tool
        run: |
          python -m pip install --upgrade pip
          pip install pytest-html-merger

      - name: Download all pytest reports
        uses: actions/download-artifact@v4
        with:
          name: pytest-report-*
          path: all-reports/

      - name: Merge reports into single HTML
        run: |
          python -m pytest_html_merger \
            --output merged-report.html \
            all-reports/**/*.html

      - name: Upload merged pytest report
        uses: actions/upload-artifact@v4
        with:
          name: merged-pytest-report
          path: merged-report.html
